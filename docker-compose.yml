version: '3.8'

services:
  youtube-transcript-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VERSION=${VERSION:-1.0.0}
    image: youtube-transcript-mcp:${VERSION:-latest}
    container_name: youtube-transcript-mcp
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"           # Main HTTP port
      - "${METRICS_PORT:-9090}:9090"   # Metrics port
    environment:
      # Server Configuration
      - PORT=${PORT:-8080}
      - HOST=${HOST:-0.0.0.0}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT:-30s}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT:-30s}
      - SERVER_IDLE_TIMEOUT=${SERVER_IDLE_TIMEOUT:-60s}
      - SERVER_SHUTDOWN_TIMEOUT=${SERVER_SHUTDOWN_TIMEOUT:-30s}
      - SERVER_MAX_REQUEST_SIZE=${SERVER_MAX_REQUEST_SIZE:-10485760}
      - SERVER_ENABLE_CORS=${SERVER_ENABLE_CORS:-true}
      - SERVER_CORS_ORIGINS=${SERVER_CORS_ORIGINS:-*}
      - SERVER_ENABLE_GZIP=${SERVER_ENABLE_GZIP:-true}
      
      # YouTube Configuration
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY:-}
      - YOUTUBE_DEFAULT_LANGUAGES=${YOUTUBE_DEFAULT_LANGUAGES:-en,ja,es,fr,de}
      - YOUTUBE_REQUEST_TIMEOUT=${YOUTUBE_REQUEST_TIMEOUT:-30s}
      - YOUTUBE_RETRY_ATTEMPTS=${YOUTUBE_RETRY_ATTEMPTS:-3}
      - YOUTUBE_RETRY_DELAY=${YOUTUBE_RETRY_DELAY:-1s}
      - YOUTUBE_RETRY_BACKOFF_FACTOR=${YOUTUBE_RETRY_BACKOFF_FACTOR:-2.0}
      - YOUTUBE_RATE_LIMIT_PER_MINUTE=${YOUTUBE_RATE_LIMIT_PER_MINUTE:-60}
      - YOUTUBE_RATE_LIMIT_PER_HOUR=${YOUTUBE_RATE_LIMIT_PER_HOUR:-1000}
      - USER_AGENT=${USER_AGENT:-YouTube-Transcript-MCP-Server/1.0.0}
      - YOUTUBE_PROXY_URL=${YOUTUBE_PROXY_URL:-}
      - YOUTUBE_ENABLE_PROXY_ROTATION=${YOUTUBE_ENABLE_PROXY_ROTATION:-false}
      - YOUTUBE_PROXY_LIST=${YOUTUBE_PROXY_LIST:-}
      - YOUTUBE_MAX_CONCURRENT=${YOUTUBE_MAX_CONCURRENT:-10}
      - YOUTUBE_COOKIE_FILE=${YOUTUBE_COOKIE_FILE:-}
      - YOUTUBE_ENABLE_COOKIES=${YOUTUBE_ENABLE_COOKIES:-false}
      
      # MCP Configuration
      - MCP_VERSION=${MCP_VERSION:-2024-11-05}
      - MCP_SERVER_NAME=${MCP_SERVER_NAME:-youtube-transcript-server}
      - MCP_SERVER_VERSION=${MCP_SERVER_VERSION:-1.0.0}
      - MCP_MAX_CONCURRENT=${MCP_MAX_CONCURRENT:-10}
      - MCP_REQUEST_TIMEOUT=${MCP_REQUEST_TIMEOUT:-60s}
      - MCP_MAX_REQUEST_SIZE=${MCP_MAX_REQUEST_SIZE:-5242880}
      - MCP_ENABLE_RESOURCES=${MCP_ENABLE_RESOURCES:-false}
      - MCP_ENABLE_PROMPTS=${MCP_ENABLE_PROMPTS:-false}
      - MCP_ENABLE_LOGGING=${MCP_ENABLE_LOGGING:-true}
      
      # Cache Configuration
      - CACHE_TYPE=${CACHE_TYPE:-memory}
      - CACHE_ENABLED=${CACHE_ENABLED:-true}
      - CACHE_TRANSCRIPT_TTL=${CACHE_TRANSCRIPT_TTL:-24h}
      - CACHE_METADATA_TTL=${CACHE_METADATA_TTL:-1h}
      - CACHE_LANGUAGES_TTL=${CACHE_LANGUAGES_TTL:-6h}
      - CACHE_ERROR_TTL=${CACHE_ERROR_TTL:-15m}
      - CACHE_MAX_SIZE=${CACHE_MAX_SIZE:-1000}
      - CACHE_MAX_MEMORY_MB=${CACHE_MAX_MEMORY_MB:-512}
      - CACHE_CLEANUP_INTERVAL=${CACHE_CLEANUP_INTERVAL:-1h}
      - CACHE_ENABLE_COMPRESSION=${CACHE_ENABLE_COMPRESSION:-true}
      
      # Redis Configuration (if using Redis cache)
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_POOL_SIZE=${REDIS_POOL_SIZE:-10}
      
      # Security Configuration
      - SECURITY_ENABLE_AUTH=${SECURITY_ENABLE_AUTH:-false}
      - SECURITY_API_KEYS=${SECURITY_API_KEYS:-}
      - SECURITY_JWT_SECRET=${SECURITY_JWT_SECRET:-}
      - SECURITY_JWT_EXPIRY=${SECURITY_JWT_EXPIRY:-24h}
      - SECURITY_ENABLE_RATE_LIMIT=${SECURITY_ENABLE_RATE_LIMIT:-true}
      - SECURITY_RATE_LIMIT_PER_IP=${SECURITY_RATE_LIMIT_PER_IP:-100}
      - SECURITY_RATE_LIMIT_WINDOW=${SECURITY_RATE_LIMIT_WINDOW:-1m}
      - SECURITY_ENABLE_IP_WHITELIST=${SECURITY_ENABLE_IP_WHITELIST:-false}
      - SECURITY_IP_WHITELIST=${SECURITY_IP_WHITELIST:-}
      - SECURITY_ENABLE_IP_BLACKLIST=${SECURITY_ENABLE_IP_BLACKLIST:-false}
      - SECURITY_IP_BLACKLIST=${SECURITY_IP_BLACKLIST:-}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - LOG_OUTPUT=${LOG_OUTPUT:-stdout}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs/app.log}
      - LOG_MAX_SIZE_MB=${LOG_MAX_SIZE_MB:-100}
      - LOG_MAX_BACKUPS=${LOG_MAX_BACKUPS:-3}
      - LOG_MAX_AGE_DAYS=${LOG_MAX_AGE_DAYS:-7}
      - LOG_COMPRESS=${LOG_COMPRESS:-true}
      - LOG_ENABLE_CALLER=${LOG_ENABLE_CALLER:-true}
      - LOG_ENABLE_STACKTRACE=${LOG_ENABLE_STACKTRACE:-false}
      - LOG_SAMPLING_ENABLED=${LOG_SAMPLING_ENABLED:-false}
      - LOG_SAMPLING_RATE=${LOG_SAMPLING_RATE:-1.0}
      
      # Metrics Configuration
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      - METRICS_PORT=${METRICS_PORT:-9090}
      - METRICS_PATH=${METRICS_PATH:-/metrics}
      - METRICS_ENABLE_HISTOGRAM=${METRICS_ENABLE_HISTOGRAM:-true}
      - METRICS_ENABLE_SUMMARY=${METRICS_ENABLE_SUMMARY:-true}
    
    volumes:
      # Mount logs directory
      - ./logs:/app/logs
      # Mount data directory for cookies or other persistent data
      - ./data:/app/data
      # Mount config file if using file-based config
      # - ./config.json:/app/config.json:ro
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network configuration
    networks:
      - youtube-transcript-network
    
    # Dependencies
    # depends_on:
    #   - redis  # Uncomment if using Redis cache
  
  # Redis service (optional - for Redis cache)
  redis:
    image: redis:7-alpine
    container_name: youtube-transcript-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - youtube-transcript-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - with-redis

  # Prometheus (optional - for metrics collection)
  prometheus:
    image: prom/prometheus:latest
    container_name: youtube-transcript-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - youtube-transcript-network
    depends_on:
      - youtube-transcript-mcp
    profiles:
      - monitoring

  # Grafana (optional - for metrics visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: youtube-transcript-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - youtube-transcript-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  youtube-transcript-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local